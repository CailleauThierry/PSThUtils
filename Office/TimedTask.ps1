<#
	.NOTES
	===========================================================================
	 Created on:   	Thursday November 10, 2016
	 Created by:   	CailleauThierry
	 Organization: 	Private
	 Filename:		TimedTask.ps1
	 Started from: 	https://github.com/Windos/powershell-depot/blob/master/General/Timesheet.ps1
	===========================================================================
	.DESCRIPTION
		This is a simple .csv timesheet generation. Set to ask for time every 20 min since last time an entry was added
	.NOTES
		- TimedTask.ps1 based on Timesheet.ps1 but you record beginning and end time and launch a script for each tasks
		- This version adds date-stamp to the generated .csv file
		- This version removes Type information in the generated .csv file (-NoTypeInformation)
		- This version add a start menu shortcut launch "Timesheet.ps1 - Shortcut" to place in either following directories:
			Autostart for currently logged-on user:
			shell:startup = %appdata%\Microsoft\Windows\Start Menu\Programs\Startup
			And startup folder all users:
			shell:common startup = %programdata%\Microsoft\Windows\Start Menu\Programs\Startup
		- "Timesheet.ps1 - Shortcut" is a shortcut of "Timesheet.ps1" editied to be an executable wrapper of the script
			This allows to avoid other tools dependencies on  bundling into an executable

	.EXAMPLE
		- copy "Timesheet.ps1 - Shortcut" to shell:startup
		- either double click on "Timesheet.ps1 - Shortcut" or restart your PC > in both case accept the pop-up asking you to allow powershell
#>

#Requires -Version 5

<#
	 Ideas for improvement:
		- have a way to enter text for the next pop-up
		- When editing in excel the double quotes generated by this script get removed for the csv
		- have the option to trigger a prompt box when needed
		- no need to check if timesheet already existing as it is date-tagged
		- need to add the next day as another column (manipulating object with import-csv?)
#>
#Time the script is launched at
$Start_Time = (Get-Date)

# Format today's date in the way that can be appended to a file name
$MyDate = (Get-Date).ToShortDateString().Replace("/", "_")

# Adding date to filename
$Filename = $MyDate + "_" + "timesheet.csv"	
$TSPath = Join-Path (Split-Path $profile) "$Filename"

class TSEntry {
	#region properties
	[string]$Name
	[datetime]$StartTime
	[datetime]$EndTime
	[string]$Activity
	#endregion
	
	#region constructors
	TSEntry([string]$Name, [datetime]$StartTime , [datetime]$EndTime, [string]$Activity)
	{
		$this.Name = $Name
		$this.StartTime = $StartTime
		$this.EndTime = $EndTime
		$this.Activity = $Activity
	}
	#endregion
	
	#region methods
	
	#endregion
}

function New-TSEntry
{
	Add-Type -AssemblyName Microsoft.VisualBasic # The input box object comes care of VisualBasic
	
	$TSPrompt = 'What are you working on?'
	$TSTitle = 'Timesheet'
	$TSDefault = ''
	
	$entry = [Microsoft.VisualBasic.Interaction]::InputBox($TSPrompt, $TSTitle, $TSDefault)
	
	$result = [TSEntry]::new($env:USERNAME, $Start_Time, (Get-Date), $entry)
	
	$result | Export-Csv -Path $TSPath -NoTypeInformation -Append
}

while ($true)
{
	New-TSEntry
	Start-Sleep -Seconds 3600 	# prompts every hours
}